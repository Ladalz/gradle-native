plugins {
	id 'dev.gradleplugins.java-gradle-plugin'
	id 'java-test-fixtures'
	id 'maven-publish'
}

repositories {
	jcenter()
	mavenCentral()
	maven { url = 'https://dl.bintray.com/gradle-plugins/distributions' }
}

dependencies {
	api project(':platformBase')
	implementation project(':runtimeNative')
	implementation project(':languageNative')
	implementation "com.google.guava:guava:${guavaVersion}"
	implementation "org.apache.commons:commons-lang3:${commonsLangVersion}"
	implementation "commons-io:commons-io:${commonsIoVersion}"

	compileOnly "org.projectlombok:lombok:${lombokVersion}"
	annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

	testImplementation platform("org.spockframework:spock-bom:${spockVersion}")
	testImplementation 'org.spockframework:spock-core'
	testImplementation "dev.gradleplugins:gradle-api:${minimumGradleVersion}"
	testRuntimeOnly 'net.bytebuddy:byte-buddy:1.10.10' // Because NamingScheme is not an interface
	testRuntimeOnly 'org.objenesis:objenesis:3.1' // Because NamingScheme is not an interface

	testFixturesImplementation project(':runtimeNative')
	testFixturesImplementation platform("org.spockframework:spock-bom:${spockVersion}")
	testFixturesImplementation 'org.spockframework:spock-core'
	testFixturesImplementation "dev.gradleplugins:gradle-api:${minimumGradleVersion}"
	testFixturesImplementation 'org.hamcrest:hamcrest:2.2'
	testFixturesImplementation "org.apache.commons:commons-lang3:${commonsLangVersion}"
}

gradlePlugin {
	plugins {
		cppApplication {
			id = 'dev.nokee.cpp-application'
			implementationClass = 'dev.nokee.platform.cpp.internal.plugins.CppApplicationPlugin'
		}
		cppLibrary {
			id = 'dev.nokee.cpp-library'
			implementationClass = 'dev.nokee.platform.cpp.internal.plugins.CppLibraryPlugin'
		}
		cApplication {
			id = 'dev.nokee.c-application'
			implementationClass = 'dev.nokee.platform.c.internal.plugins.CApplicationPlugin'
		}
		cLibrary {
			id = 'dev.nokee.c-library'
			implementationClass = 'dev.nokee.platform.c.internal.plugins.CLibraryPlugin'
		}
		objcApplication {
			id = 'dev.nokee.objective-c-application'
			implementationClass = 'dev.nokee.platform.objectivec.internal.plugins.ObjectiveCApplicationPlugin'
		}
		objcLibrary {
			id = 'dev.nokee.objective-c-library'
			implementationClass = 'dev.nokee.platform.objectivec.internal.plugins.ObjectiveCLibraryPlugin'
		}
		objcppApplication {
			id = 'dev.nokee.objective-cpp-application'
			implementationClass = 'dev.nokee.platform.objectivecpp.internal.plugins.ObjectiveCppApplicationPlugin'
		}
		objcppLibrary {
			id = 'dev.nokee.objective-cpp-library'
			implementationClass = 'dev.nokee.platform.objectivecpp.internal.plugins.ObjectiveCppLibraryPlugin'
		}
		swiftApplication {
			id = 'dev.nokee.swift-application'
			implementationClass = 'dev.nokee.platform.swift.internal.plugins.SwiftApplicationPlugin'
		}
		swiftLibrary {
			id = 'dev.nokee.swift-library'
			implementationClass = 'dev.nokee.platform.swift.internal.plugins.SwiftLibraryPlugin'
		}
	}
}
